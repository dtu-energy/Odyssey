from odyssey.navigators import Navigator
import torch
from botorch.utils.sampling import draw_sobol_samples

class Sobol_Navigator(Navigator):

    """
    Sobol_Navigator is a subclass of the Navigator class that uses Sobol sequence for sampling. 
    The Sobol_Navigator can serve dual purposes: it can be used for initialization and can also function independently as a standalone navigator. 
    The Sobol_Navigator does not necessitate the provision of initial data. As it inherits from the Navigator class, it utilizes the initialization parameters of the Navigator for its own initialization.

    Attributes:
        requires_init_data (bool): A flag, set to False, indicating that this navigator does not require initial data.
        samples_generated (int): The number of samples generated by the navigator.
    """

    requires_init_data = False

    def __init__(self,
                 *args,
                 **kwargs):
        
        """
        Initializes a Sobol_Navigator object. 

        Args:
            *args: Variable length argument list.
            **kwargs: Arbitrary keyword arguments.
        """
        
        super().__init__(*args, **kwargs)

        self.samples_generated = 0
    
    def _upgrade(self):

        """
        Simply increments the number of samples generated by the navigator.
        """

        self.samples_generated += 1

    def _trajectory(self) -> torch.Tensor:

        """
        Draws a sample from the Sobol sequence.

        Returns:
            torch.Tensor: The next sample from the Sobol sequence.
        """

        candidate = draw_sobol_samples(self.traj_bounds, n = 1, q = 1, seed = None).squeeze(0)

        return candidate
        